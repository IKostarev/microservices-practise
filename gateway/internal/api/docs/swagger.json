{
    "swagger": "2.0",
    "info": {
        "description": "This service is Gateway API for all microservices of ToDo service",
        "title": "ToDo Gateway API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/v1/todos": {
            "post": {
                "description": "This endpoint creates a new todo in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo",
                    "v1"
                ],
                "summary": "Create a new todo",
                "parameters": [
                    {
                        "description": "New Todo",
                        "name": "newTodo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "todo_id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/v1/todos/{id}": {
            "put": {
                "description": "Updates the information of an existing todo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo",
                    "v1"
                ],
                "summary": "Update todo information",
                "parameters": [
                    {
                        "description": "Update ToDo",
                        "name": "updateTodo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTodoDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Deletes a todo from the system based on their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo",
                    "v1"
                ],
                "summary": "Delete a todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/users/delete/{id}": {
            "delete": {
                "description": "Deletes a user from the system based on their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/users/invalidate-token/{id}": {
            "post": {
                "description": "Invalidates a specific token for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Invalidate a specific token for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token invalidated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/invalidate-tokens/{id}": {
            "post": {
                "description": "Invalidates all tokens for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Invalidate all tokens for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens invalidated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/login": {
            "post": {
                "description": "Authenticates a user and returns access and refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/refresh": {
            "post": {
                "description": "Refreshes the user's access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Token Refresh Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserTokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Token Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/register": {
            "post": {
                "description": "This endpoint registers a new user in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "New User",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user_id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/update": {
            "put": {
                "description": "Updates the information of an existing user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "Updated User",
                        "name": "updatedUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/users/update-password": {
            "put": {
                "description": "Allows a user to update their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Update user's password",
                "parameters": [
                    {
                        "description": "Password Update Request",
                        "name": "passwordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserPasswordDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Retrieves user details by their unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "v1"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateTodoDTO": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 2
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "todo description"
                },
                "id": {
                    "type": "string",
                    "example": "c0e708fa-a7df-4d9f-a1b8-a3bfe63c433c"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "password_confirmation": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "models.TodoDTO": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 2
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "todo description"
                },
                "id": {
                    "type": "string",
                    "example": "c0e708fa-a7df-4d9f-a1b8-a3bfe63c433c"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateTodoDTO": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 2
                },
                "description": {
                    "type": "string",
                    "example": "todo description"
                },
                "id": {
                    "type": "string",
                    "example": "c0e708fa-a7df-4d9f-a1b8-a3bfe63c433c"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.UpdateUserPasswordDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "old_password": {
                    "type": "string",
                    "example": "password"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "password_confirmation": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "models.UserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "models.UserLoginDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserTokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}