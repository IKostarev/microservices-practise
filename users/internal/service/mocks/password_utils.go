// Code generated by MockGen. DO NOT EDIT.
// Source: users/internal/service (interfaces: PasswordUtils)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordUtils is a mock of PasswordUtils interface.
type MockPasswordUtils struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordUtilsMockRecorder
}

// MockPasswordUtilsMockRecorder is the mock recorder for MockPasswordUtils.
type MockPasswordUtilsMockRecorder struct {
	mock *MockPasswordUtils
}

// NewMockPasswordUtils creates a new mock instance.
func NewMockPasswordUtils(ctrl *gomock.Controller) *MockPasswordUtils {
	mock := &MockPasswordUtils{ctrl: ctrl}
	mock.recorder = &MockPasswordUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordUtils) EXPECT() *MockPasswordUtilsMockRecorder {
	return m.recorder
}

// ComparePassword mocks base method.
func (m *MockPasswordUtils) ComparePassword(arg0 context.Context, arg1, arg2 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePassword", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComparePassword indicates an expected call of ComparePassword.
func (mr *MockPasswordUtilsMockRecorder) ComparePassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePassword", reflect.TypeOf((*MockPasswordUtils)(nil).ComparePassword), arg0, arg1, arg2)
}

// GeneratePassword mocks base method.
func (m *MockPasswordUtils) GeneratePassword(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneratePassword", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneratePassword indicates an expected call of GeneratePassword.
func (mr *MockPasswordUtilsMockRecorder) GeneratePassword(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratePassword", reflect.TypeOf((*MockPasswordUtils)(nil).GeneratePassword), arg0, arg1)
}
